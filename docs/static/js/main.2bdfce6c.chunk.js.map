{"version":3,"sources":["game/Position.ts","constants.ts","utils/useSquareText.ts","components/Opening.tsx","game/Stats.ts","game/BlockRandomState.ts","utils/RandomState.ts","game/FieldState.ts","components/SlidingDigit.tsx","components/Score.tsx","components/GameResult.tsx","components/GameContainer.tsx","components/TimeProgress.tsx","components/Scoreboard.tsx","components/StartBanner.tsx","scenes/GamePlay.tsx","utils/useTimer.ts","utils/Range.ts","components/Field.tsx","components/Square.tsx","components/MouseControl.tsx","utils/usePan.ts","utils/useCanvasContext.ts","components/CanvasField.tsx","assets/bomb.svg","assets/flag.svg","assets/clock.svg","components/CanvasSquare.tsx","scenes/GameField.tsx","scenes/Game.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Position","x","y","this","p","key","split","map","Number","Zero","BRAND","SQUARE_SIZE","useSquareText","text","useMemo","width","height","textTable","cols","Math","floor","rows","lines","max","line","length","startY","i","startX","j","getCenteredSquareTextTable","window","innerWidth","innerHeight","Opening","brand","useState","isHidden","setIsHidden","squares","Object","getOwnPropertyNames","from","className","style","left","top","useEffect","timerId","setTimeout","clearTimeout","cn","Stats","mines","checked","flags","correctFlags","clicks","stats","assign","newBlock","oldBlock","count","mine","flag","newValue","oldValue","BlockRandomStateGenerator","value","depth","min","log10","itemBox","RandomState","randomObject","seed","nextSeed","savedNext","v","forEach","objectKey","nextState","ADJACENTS","FieldState","random","Date","getTime","field","Map","block","getBlock","currentState","click","determinedState","determineAdjacents","tryCountAdjacents","adjacent","setBlock","checkedState","checkedBlock","mapAdjacents","q","checkBlock","adjacentState","adjacentBlocks","get","values","canChord","set","position","newStats","sum","nextField","next","mapCallback","getAdjacentPositions","reduce","prevState","prevBlocks","newBlocks","counter","filter","add","SlidingDigit","startValue","currentValue","abs","prev","useRef","prevValue","current","animationDelay","Score","startFromZero","digits","Array","String","digit","undefined","MemoizedScore","React","memo","GameResult","onRetry","setClicks","efficiency","setEfficiency","wins","setWins","timer","type","onClick","href","aria-label","GameContainer","isPaused","panel","children","TimeProgress","percentage","barStyle","Scoreboard","time","StartBanner","GamePlay","maxSeconds","fieldState","timeChanges","onTimeOver","seconds","setSeconds","timerHandle","increase","s","prevSeconds","start","setInterval","clearInterval","stop","reset","useTimer","Range","xStart","yStart","xEnd","yEnd","range","callback","result","index","push","cellSize","ceil","useRange","ref","offset","oldRange","setRange","updateRange","element","rect","getBoundingClientRect","newRange","fromRect","equals","addEventListener","removeEventListener","Field","containerRef","toSquarePosition","Square","pushed","content","MouseControl","onMouseDown","onMouseUp","onLongMouseDown","onLongClick","onRightClick","onDualClick","onPan","onPanEnd","leftDown","rightDown","longClickTimer","cancelLongMouseDownTimer","updateOffset","useCallback","dx","dy","newOffset","isPanning","setIsPanning","containerElement","panStart","prevX","prevY","handlePointerMove","handlePointerStart","handlePointerEnd","e","stopPropagation","preventDefault","handleMouseMove","clientX","clientY","handleMouseUp","handleMouseDown","handleTouchMove","touches","handleTouchEnd","handleTouchStart","usePan","getMousePosition","clientLeft","clientTop","getTouchPosition","touchX","changedTouches","touchY","role","tabIndex","pos","button","onTouchStart","onTouchEnd","onContextMenu","useCanvasContext","canvasRef","context","setContext","canvasElement","ctx","getContext","alpha","ratio","devicePixelRatio","scale","CanvasField","clientWidth","clientHeight","requestId","requestAnimationFrame","square","drawImage","cancelAnimationFrame","ICON_SIZE","TEXT_COLORS","toImage","src","img","Image","mineImage","Mine","flagImage","Flag","clockImage","Clock","cachedSquares","getCanvasSquare","props","cachedKey","JSON","stringify","cachedSquare","document","createElement","font","textAlign","textBaseline","fillStyle","fillRect","BORDER_SIZE","fillText","beginPath","lineWidth","moveTo","lineTo","fill","drawSquare","GameField","useCanvas","squareText","onCheck","onChord","onFlag","setOffset","pushedSquares","setPushedSquares","handlePan","handleRightClick","mousePosition","includes","USE_CANVAS","URL","location","searchParams","Game","setFieldState","status","setStatus","setTimeChanges","handleTimeOver","checkGameStatus","applyStateResult","newState","checkedBlocks","chordBlock","toggleFlag","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2bdfce6c.chunk.js","sourcesContent":["export type PositionTuple = [number, number];\n\nexport class Position {\n  static Zero = new Position(0, 0);\n\n  constructor(\n    public readonly x: number,\n    public readonly y: number,\n  ) {\n  }\n\n  static from(key: string) {\n    return new Position(...key.split(',').map(Number) as PositionTuple);\n  }\n\n  get key() {\n    return `${this.x},${this.y}`;\n  }\n\n  add(p: Position) {\n    return new Position(this.x + p.x, this.y + p.y);\n  }\n}\n","export const BRAND = 'INFINITE MINESWEEPER';\nexport const SQUARE_SIZE = 32;\n","import { useMemo } from 'react';\nimport { SQUARE_SIZE } from '../constants';\nimport { Position } from '../game/Position';\n\nexport function getCenteredSquareTextTable(\n  text: string,\n  width: number,\n  height: number,\n) {\n  const textTable: Record<string, string> = {};\n  const cols = Math.floor(width / SQUARE_SIZE);\n  const rows = Math.floor(height / SQUARE_SIZE);\n  const lines = (() => {\n    if (Math.max(...text.split('\\n').map((line) => line.length)) < cols) {\n      return text.split('\\n');\n    }\n\n    return text.split(/[\\n ]/);\n  })();\n  const startY = Math.floor(rows / 2) - Math.floor(lines.length / 2);\n\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n    const startX = Math.floor(cols / 2) - Math.floor(line.length / 2);\n\n    for (let j = 0; j < line.length; j++) {\n      textTable[new Position(j + startX, i + startY).key] = line[j];\n    }\n  }\n\n  return textTable;\n}\n\nexport function useSquareText(text: string) {\n  return useMemo(\n    () => getCenteredSquareTextTable(text, window.innerWidth, window.innerHeight),\n    [text],\n  );\n}\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Position } from '../game/Position';\nimport { useSquareText } from '../utils/useSquareText';\nimport { SQUARE_SIZE } from '../constants';\nimport './Opening.css';\n\nconst OPENING_ANIMATION_DURATION = 1000;\n\nexport interface OpeningProps {\n  brand: string;\n}\n\nexport function Opening({ brand }: OpeningProps) {\n  const [isHidden, setIsHidden] = useState(false);\n  const textTable = useSquareText(brand);\n  const squares = Object.getOwnPropertyNames(textTable)\n    .map(Position.from)\n    .map(({ x, y, key }) => (\n      <div\n        key={key}\n        className=\"opening__square\"\n        style={{\n          width: `${SQUARE_SIZE}px`,\n          height: `${SQUARE_SIZE}px`,\n          left: `${x * SQUARE_SIZE}px`,\n          top: `${y * SQUARE_SIZE}px`,\n        }}\n      >\n        {textTable[key]}\n      </div>\n    ));\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setIsHidden(true);\n    }, OPENING_ANIMATION_DURATION);\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, []);\n\n  return (\n    <div className={cn('opening', isHidden && 'opening--hidden')}>\n      {squares}\n    </div>\n  );\n}\n","import { BlockState } from './BlockState';\n\nexport class Stats {\n  constructor(\n    public readonly mines = 0,\n    public readonly checked = 0,\n    public readonly flags = 0,\n    public readonly correctFlags = 0,\n    public readonly clicks = 0,\n  ) {\n  }\n\n  set(stats: Partial<Stats>) {\n    return Object.assign(new Stats(), this, stats);\n  }\n\n  sum(newBlock: BlockState, oldBlock?: BlockState): Stats {\n    return new Stats(\n      Stats.count(newBlock.mine, oldBlock?.mine) + this.mines,\n      Stats.count(newBlock.checked, oldBlock?.checked) + this.checked,\n      Stats.count(newBlock.flag, oldBlock?.flag) + this.flags,\n      Stats.count(\n        newBlock.flag && newBlock.mine,\n        oldBlock?.flag && oldBlock?.mine,\n      ) + this.correctFlags,\n      this.clicks,\n    );\n  }\n\n  private static count(newValue: boolean, oldValue?: boolean) {\n    if (oldValue && !newValue) {\n      return -1;\n    }\n\n    if (!oldValue && newValue) {\n      return 1;\n    }\n\n    return 0;\n  }\n}\n","import { RandomStateGenerator } from '../utils/RandomState';\nimport { BlockState } from './BlockState';\n\nconst MIN_MINE_RATE = 0.15;\nconst MAX_MINE_RATE = 0.3;\nconst ITEM_BOX_RATE = 0.05;\n\nexport type BlockRandomStateType = Pick<BlockState, 'mine' | 'itemBox'>;\n\nexport const BlockRandomStateGenerator: RandomStateGenerator<BlockRandomStateType> = {\n  mine: (value, depth) => (\n    // First middle block is never a mine.\n    // It's 8 beacause adjacents are first checked, and middle one later.\n    depth !== 8\n    && value < (Math.min(MAX_MINE_RATE, MIN_MINE_RATE + Math.log10(depth) / 100))\n  ),\n  itemBox: (value) => value < ITEM_BOX_RATE,\n};\n","export type RandomStateGenerator<T> = {\n  [Property in keyof T]: (v: number, c: number) => T[Property];\n};\n\nexport class RandomState<T> {\n  public readonly value: T;\n  private nextSeed: number;\n  private savedNext?: RandomState<T>;\n\n  constructor(\n    private randomObject: RandomStateGenerator<T>,\n    private seed = 1,\n    private depth = 0,\n  ) {\n    const v: Partial<T> = {};\n    let nextSeed = seed;\n\n    Object.getOwnPropertyNames(randomObject).forEach((key) => {\n      const objectKey = key as keyof T;\n      const value = (nextSeed % 1000) / 1000;\n      v[objectKey] = this.randomObject[objectKey](value, depth);\n      nextSeed = (this.seed * 16807) % 2147483647;\n    });\n\n    this.value = v as T;\n    this.nextSeed = nextSeed;\n  }\n\n  get next() {\n    if (!this.savedNext) {\n      const nextState = new RandomState(this.randomObject, this.nextSeed, this.depth + 1);\n      this.savedNext = nextState;\n      return nextState;\n    }\n\n    return this.savedNext;\n  }\n}\n","import { Map } from 'immutable';\nimport { BlockState } from './BlockState';\nimport { Position } from './Position';\nimport { Stats } from './Stats';\nimport { BlockRandomStateGenerator } from './BlockRandomState';\nimport { RandomState } from '../utils/RandomState';\n\nconst ADJACENTS: Position[] = [[-1, -1], [0, -1], [1, -1], [-1, 0], [1, 0], [-1, 1], [0, 1], [1, 1]]\n  .map(([x, y]) => new Position(x, y));\n\nexport type FieldStateSetResult = [FieldState, ...BlockState[]];\n\nexport class FieldState {\n  constructor(\n    private random = new RandomState(BlockRandomStateGenerator, new Date().getTime()),\n    private field = Map<string, BlockState>(),\n    public readonly stats = new Stats(),\n  ) {\n  }\n\n  checkBlock(p: Position, depth = 0): FieldStateSetResult {\n    const block = this.getBlock(p);\n\n    if (block?.checked || block?.flag) {\n      return [this];\n    }\n\n    const currentState = depth === 0 ? this.click() : this;\n    const determinedState = currentState.determineAdjacents(p);\n    const count = determinedState.tryCountAdjacents(p, (adjacent) => adjacent?.mine);\n    const [checkedState, checkedBlock] = determinedState.setBlock(p, { checked: true, count });\n\n    if (count > 0 || checkedBlock?.mine) {\n      return [checkedState, checkedBlock];\n    }\n\n    const [adjacentState, ...adjacentBlocks] = checkedState.mapAdjacents(\n      p,\n      (nextState, q) => nextState.checkBlock(q, depth + 1),\n    );\n\n    return [adjacentState, checkedBlock, ...adjacentBlocks];\n  }\n\n  getBlock({ key }: Position) {\n    return this.field.get(key);\n  }\n\n  blocks() {\n    return this.field.values();\n  }\n\n  toggleFlag(p: Position): FieldStateSetResult {\n    const block = this.getBlock(p);\n\n    if (block?.checked) {\n      return [this];\n    }\n\n    return this.click().setBlock(p, { flag: !block?.flag });\n  }\n\n  chordBlock(p: Position): FieldStateSetResult {\n    if (this.canChord(p)) {\n      return this.click().mapAdjacents(p, (nextState, q) => nextState.checkBlock(q, 1));\n    }\n\n    return [this];\n  }\n\n  canChord(p: Position) {\n    const block = this.getBlock(p);\n    return block && block.checked && !block.mine && block.count === this.tryCountAdjacents(\n      p,\n      (adjacent) => adjacent && (adjacent.flag || (adjacent.checked && adjacent.mine)),\n    );\n  }\n\n  private click() {\n    return new FieldState(\n      this.random,\n      this.field,\n      this.stats.set({ clicks: this.stats.clicks + 1 }),\n    );\n  }\n\n  private setBlock(p: Position, block?: Partial<BlockState>) {\n    const oldBlock = this.getBlock(p);\n    const newBlock = {\n      position: p,\n      count: 0,\n      checked: false,\n      flag: false,\n      ...this.random.value,\n      ...oldBlock,\n      ...block,\n    };\n    const newStats = this.stats.sum(newBlock, oldBlock);\n    const nextField = this.field.set(p.key, newBlock);\n\n    return [new FieldState(this.random.next, nextField, newStats), newBlock] as FieldStateSetResult;\n  }\n\n  private determineAdjacents(p: Position): FieldState {\n    return this.mapAdjacents(p, (nextState, q) => nextState.setBlock(q))[0];\n  }\n\n  private mapAdjacents(\n    p: Position,\n    mapCallback: (nextState: FieldState, q: Position) => FieldStateSetResult,\n  ) {\n    return FieldState\n      .getAdjacentPositions(p)\n      .reduce(([prevState, ...prevBlocks], q) => {\n        const [nextState, ...newBlocks] = mapCallback(prevState, q);\n        return [nextState, ...prevBlocks, ...newBlocks] as FieldStateSetResult;\n      }, [this] as FieldStateSetResult);\n  }\n\n  private tryCountAdjacents(p: Position, counter: (block?: BlockState) => unknown) {\n    return FieldState.getAdjacentPositions(p).map((q) => this.getBlock(q)).filter(counter).length;\n  }\n\n  static getAdjacentPositions(p: Position) {\n    return ADJACENTS.map((q) => p.add(q));\n  }\n}\n","import { useEffect, useRef } from 'react';\nimport './SlidingDigit.css';\n\nexport interface SlidingDigitProps {\n  value: number;\n  position: number;\n  startValue?: number;\n}\n\nexport function SlidingDigit({ value = 0, position = 0, startValue }: SlidingDigitProps) {\n  const currentValue = Math.abs(value) % 10;\n  const prev = useRef(startValue ?? currentValue);\n  const prevValue = prev.current;\n  const style = {\n    animationDelay: `${position * 100}ms`,\n  };\n\n  useEffect(() => {\n    prev.current = currentValue;\n  }, [currentValue]);\n\n  return (\n    <span className=\"sliding-digit\">\n      {currentValue === prevValue && (\n        <span key={currentValue}>{currentValue}</span>\n      )}\n      {currentValue !== prevValue && (\n        <>\n          <span key={currentValue} style={style} className=\"sliding-digit__current\">{currentValue}</span>\n          <span key={prevValue} style={style} className=\"sliding-digit__prev\">{prevValue}</span>\n        </>\n      )}\n    </span>\n  );\n}\n","import React from 'react';\nimport { SlidingDigit } from './SlidingDigit';\n\nexport interface ScoreProps {\n  value: number;\n  startFromZero?: boolean;\n}\n\nexport function Score({ value, startFromZero = false }: ScoreProps) {\n  const digits = Array.from(String(value)).map(Number);\n\n  return (\n    <span>\n      {digits.map((digit, i) => (\n        <SlidingDigit\n          key={`digit-${digits.length - i - 1}`}\n          value={digit}\n          position={digits.length - i - 1}\n          startValue={startFromZero ? 0 : undefined}\n        />\n      ))}\n    </span>\n  );\n}\n\nexport const MemoizedScore = React.memo(Score);\n","import { useEffect, useState } from 'react';\nimport GitHubButton from 'react-github-btn';\nimport { MemoizedScore } from './Score';\nimport { Stats } from '../game/Stats';\nimport './GameResult.css';\n\nexport interface GameResultProps {\n  stats: Stats;\n  onRetry?: () => void;\n}\n\nexport function GameResult({ stats, onRetry }: GameResultProps) {\n  const [clicks, setClicks] = useState(0);\n  const [efficiency, setEfficiency] = useState(0);\n  const [wins, setWins] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setEfficiency(Math.max(Math.floor(stats.checked / stats.clicks), 0));\n      setClicks(stats.clicks);\n      setWins(stats.correctFlags);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [stats]);\n\n  return (\n    <div className=\"game-result\">\n      <div className=\"game-result__panel\">\n        <h1>GAME OVER</h1>\n        <table>\n          <tbody>\n            <tr>\n              <th>CLICKS</th>\n              <td><MemoizedScore value={clicks} startFromZero /></td>\n            </tr>\n            <tr>\n              <th>EFFICIENCY</th>\n              <td><MemoizedScore value={efficiency} startFromZero /></td>\n            </tr>\n            <tr>\n              <th>WINS</th>\n              <td><MemoizedScore value={wins} startFromZero /></td>\n            </tr>\n          </tbody>\n        </table>\n\n        {onRetry && (\n          <button\n            type=\"button\"\n            className=\"game-result__retry\"\n            onClick={onRetry}\n          >\n            RETRY\n          </button>\n        )}\n\n        <div>\n          <GitHubButton\n            href=\"https://github.com/elfrog/infinite-minesweeper\"\n            aria-label=\"Star elfrog/infinite-minesweeper on GitHub\"\n          >\n            Star\n          </GitHubButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport cn from 'classnames';\nimport './GameContainer.css';\n\nexport interface GameContainerProps {\n  isPaused: boolean;\n  panel?: ReactNode;\n  children: ReactNode;\n}\n\nexport function GameContainer({ isPaused, panel, children }: GameContainerProps) {\n  return (\n    <div className={cn('game-container', isPaused && 'game-container--paused')}>\n      <div className=\"game-container__field\">\n        {children}\n      </div>\n      <div className=\"game-container__panel\">\n        {panel}\n      </div>\n    </div>\n  );\n}\n","import cn from 'classnames';\nimport './TimeProgress.css';\n\nexport interface TimeProgressProps {\n  value: number;\n  max: number;\n}\n\nexport function TimeProgress({ value, max }: TimeProgressProps) {\n  const percentage = Math.min(100, (value / max) * 100);\n  const barStyle = {\n    width: `${percentage}%`,\n  };\n\n  return (\n    <div\n      className={cn(\n        'time-progress',\n        percentage < 20 && 'time-progress--hurry',\n        percentage >= 20 && percentage < 50 && 'time-progress--warning',\n      )}\n    >\n      <div className=\"time-progress__bar\" style={barStyle} />\n    </div>\n  );\n}\n","import { TimeProgress } from './TimeProgress';\nimport { Score } from './Score';\nimport './Scoreboard.css';\n\nexport interface ScoreboardProps {\n  time: number;\n  checked: number;\n  flags: number;\n}\n\nexport function Scoreboard({ time, checked, flags }: ScoreboardProps) {\n  return (\n    <div className=\"scoreboard\">\n      <div className=\"scoreboard__panel\">\n        <div>\n          <div className=\"scoreboard__time\">\n            <TimeProgress value={time} max={1} />\n          </div>\n        </div>\n        <div>\n          <div className=\"scoreboard__score\">\n            <span>☑️</span>\n            <Score value={checked} />\n          </div>\n          <div className=\"scoreboard__score\">\n            <span>🚩</span>\n            <Score value={flags} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import './StartBanner.css';\n\nexport interface StartBannerProps {\n}\n\nexport function StartBanner() {\n  return (\n    <div className=\"start-banner\">\n      <span>START!</span>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { FieldState } from '../game/FieldState';\nimport { Scoreboard } from '../components/Scoreboard';\nimport { StartBanner } from '../components/StartBanner';\nimport { useTimer } from '../utils/useTimer';\n\nexport interface GamePlayProps {\n  maxSeconds: number;\n  fieldState: FieldState;\n  timeChanges: number[];\n  onTimeOver: () => void;\n}\n\nexport default function GamePlay({\n  maxSeconds,\n  fieldState,\n  timeChanges,\n  onTimeOver,\n}: GamePlayProps) {\n  const [seconds, timer] = useTimer(maxSeconds);\n\n  useEffect(() => {\n    timer.start();\n  }, [timer]);\n\n  useEffect(() => {\n    if (seconds === 0) {\n      onTimeOver?.();\n    }\n  }, [seconds, onTimeOver]);\n\n  useEffect(() => {\n    timeChanges.forEach((time) => {\n      if (time) {\n        timer.increase(time);\n      }\n    });\n  }, [timeChanges, timer]);\n\n  return (\n    <>\n      <Scoreboard\n        time={seconds / maxSeconds}\n        checked={fieldState.stats.checked}\n        flags={fieldState.stats.flags}\n      />\n      <StartBanner />\n    </>\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from 'react';\n\ninterface Timer {\n  increase(s: number): void;\n  start(): void;\n  stop(): void;\n  reset(): void;\n}\n\nexport function useTimer(max: number) {\n  const [seconds, setSeconds] = useState(max);\n  const timerHandle = useRef(0);\n  const timer = useMemo<Timer>(() => ({\n    increase(s = 1) {\n      if (timerHandle.current) {\n        setSeconds((prevSeconds) => Math.max(Math.min(prevSeconds + s + 1, max), 0));\n      }\n    },\n    start() {\n      if (!timerHandle.current) {\n        timerHandle.current = window.setInterval(() => {\n          setSeconds((prevSeconds) => {\n            if (prevSeconds === 0) {\n              window.clearInterval(timerHandle.current);\n              timerHandle.current = 0;\n              return 0;\n            }\n\n            return Math.max(prevSeconds - 1, 0);\n          });\n        }, 1000);\n      }\n    },\n    stop() {\n      if (timerHandle.current) {\n        window.clearInterval(timerHandle.current);\n        timerHandle.current = 0;\n      }\n    },\n    reset() {\n      setSeconds(max);\n\n      if (timerHandle.current) {\n        window.clearInterval(timerHandle.current);\n        timerHandle.current = 0;\n      }\n    },\n  }), [max]);\n\n  useEffect(() => () => {\n    if (timerHandle.current) {\n      window.clearInterval(timerHandle.current);\n    }\n  }, []);\n\n  return [seconds, timer] as [number, Timer];\n}\n","import {\n  RefObject, useEffect, useRef, useState,\n} from 'react';\nimport { SQUARE_SIZE } from '../constants';\nimport { Position } from '../game/Position';\n\nexport class Range {\n  static Zero = new Range(0, 0, 0, 0);\n\n  constructor(\n    public xStart: number,\n    public yStart: number,\n    public xEnd: number,\n    public yEnd: number,\n  ) {\n  }\n\n  static fromRect(x: number, y: number, width: number, height: number, cellSize: number) {\n    const xStart = Math.floor(x / cellSize);\n    const xEnd = xStart + Math.ceil(width / cellSize);\n    const yStart = Math.floor(y / cellSize);\n    const yEnd = yStart + Math.ceil(height / cellSize);\n\n    return new Range(xStart, yStart, xEnd, yEnd);\n  }\n\n  equals(range: Range) {\n    return (\n      range.xStart === this.xStart\n      && range.yStart === this.yStart\n      && range.xEnd === this.xEnd\n      && range.yEnd === this.yEnd\n    );\n  }\n\n  map<T>(callback: (p: Position, i: number) => T) {\n    const result: Array<T> = [];\n    let index = 0;\n\n    for (let y = this.yStart; y <= this.yEnd; y++) {\n      for (let x = this.xStart; x <= this.xEnd; x++) {\n        result.push(callback(new Position(x, y), index));\n        index++;\n      }\n    }\n\n    return result;\n  }\n\n  forEach(callback: (p: Position, i: number) => void) {\n    let index = 0;\n\n    for (let y = this.yStart; y <= this.yEnd; y++) {\n      for (let x = this.xStart; x <= this.xEnd; x++) {\n        callback(new Position(x, y), index);\n        index++;\n      }\n    }\n  }\n}\n\nexport function useRange(ref: RefObject<Element>, offset: Position) {\n  const oldRange = useRef<Range>(Range.Zero);\n  const [range, setRange] = useState(Range.Zero);\n\n  useEffect(() => {\n    function updateRange() {\n      const element = ref.current;\n\n      if (element) {\n        const rect = element.getBoundingClientRect();\n        const newRange = Range.fromRect(offset.x, offset.y, rect.width, rect.height, SQUARE_SIZE);\n\n        if (!newRange.equals(oldRange.current)) {\n          oldRange.current = newRange;\n          setRange(newRange);\n        }\n      }\n    }\n\n    updateRange();\n\n    window.addEventListener('resize', updateRange, false);\n\n    return () => {\n      window.removeEventListener('resize', updateRange, false);\n    };\n  }, [ref, offset]);\n\n  return range;\n}\n","import { ReactNode, useRef } from 'react';\nimport { Position } from '../game/Position';\nimport { Range, useRange } from '../utils/Range';\nimport { SQUARE_SIZE } from '../constants';\nimport './Field.css';\n\nexport interface FieldProps {\n  offset: Position;\n  children?: (range: Range) => ReactNode;\n}\n\nexport function Field({ offset, children }: FieldProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const range = useRange(containerRef, offset);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"field\"\n    >\n      <div\n        className=\"field__content\"\n        style={{\n          left: `${range.xStart * SQUARE_SIZE - offset.x}px`,\n          top: `${range.yStart * SQUARE_SIZE - offset.y}px`,\n          width: `${(range.xEnd - range.xStart + 1) * SQUARE_SIZE}px`,\n          height: `${(range.yEnd - range.yStart + 1) * SQUARE_SIZE}px`,\n        }}\n      >\n        {children?.(range)}\n      </div>\n    </div>\n  );\n}\n","import cn from 'classnames';\nimport { Position } from '../game/Position';\nimport { SQUARE_SIZE } from '../constants';\nimport './Square.css';\n\nexport function toSquarePosition({ x, y }: Position) {\n  return new Position(Math.floor(x / SQUARE_SIZE), Math.floor(y / SQUARE_SIZE));\n}\n\nexport interface SquareProps {\n  checked?: boolean;\n  flag?: boolean;\n  itemBox?: boolean;\n  pushed?: boolean;\n  count?: number;\n  mine?: boolean;\n  text?: string;\n}\n\nexport function Square({\n  checked,\n  flag,\n  itemBox,\n  pushed,\n  count = 0,\n  mine,\n  text,\n}: SquareProps) {\n  let content = '';\n\n  if (checked) {\n    if (mine) {\n      content = '💣';\n    } else {\n      content = `${count || ''}`;\n    }\n  } else if (flag) {\n    content = '🚩';\n  } else if (itemBox) {\n    content = '⏰';\n  } else if (text) {\n    content = text;\n  }\n\n  return (\n    <div\n      className={cn(\n        'square',\n        `square--count-${count}`,\n        checked && 'square--checked',\n        !checked && pushed && 'square--pushed',\n        !checked && text && 'square--text',\n      )}\n      style={{\n        width: `${SQUARE_SIZE}px`,\n        height: `${SQUARE_SIZE}px`,\n      }}\n    >\n      {content}\n    </div>\n  );\n}\n","import {\n  MouseEvent, ReactNode, TouchEvent, useCallback, useRef,\n} from 'react';\nimport cn from 'classnames';\nimport { Position } from '../game/Position';\nimport { PanCallback, usePan } from '../utils/usePan';\nimport './MouseControl.css';\n\nconst LONG_CLICK_DURATION = 250;\n\nexport interface MouseControlProps {\n  onMouseDown?: (p: Position) => void;\n  onMouseUp?: (p: Position) => void;\n  onLongMouseDown?: (p: Position) => void;\n  onClick?: (p: Position) => void;\n  onLongClick?: (p: Position) => void;\n  onRightClick?: (p: Position) => void;\n  onDualClick?: (p: Position) => void;\n  onPan?: (offset: Position) => void;\n  onPanEnd?: (offset: Position) => void;\n  children: ReactNode;\n}\n\nexport function MouseControl({\n  onMouseDown,\n  onMouseUp,\n  onLongMouseDown,\n  onClick,\n  onLongClick,\n  onRightClick,\n  onDualClick,\n  onPan,\n  onPanEnd,\n  children,\n}: MouseControlProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const leftDown = useRef(false);\n  const rightDown = useRef(false);\n  const longClickTimer = useRef(0);\n  const offset = useRef(Position.Zero);\n\n  function cancelLongMouseDownTimer() {\n    if (longClickTimer.current) {\n      clearTimeout(longClickTimer.current);\n      longClickTimer.current = 0;\n    }\n  }\n\n  const updateOffset = useCallback<PanCallback>((dx, dy) => {\n    const newOffset = new Position(offset.current.x + dx, offset.current.y + dy);\n    offset.current = newOffset;\n    cancelLongMouseDownTimer();\n    onPan?.(newOffset);\n  }, [onPan]);\n  const isPanning = usePan(containerRef, updateOffset);\n\n  function getMousePosition(e: MouseEvent) {\n    const left = e.clientX - (containerRef.current?.clientLeft || 0);\n    const top = e.clientY - (containerRef.current?.clientTop || 0);\n    return new Position(left + offset.current.x, top + offset.current.y);\n  }\n\n  function getTouchPosition(e: TouchEvent<HTMLDivElement>) {\n    const touchX = e.touches[0]?.clientX || e.changedTouches[0].clientX;\n    const touchY = e.touches[0]?.clientY || e.changedTouches[0].clientY;\n    const left = touchX - (containerRef.current?.clientLeft || 0);\n    const top = touchY - (containerRef.current?.clientTop || 0);\n    return new Position(left + offset.current.x, top + offset.current.y);\n  }\n\n  function handleMouseDown(e: MouseEvent) {\n    // prevent drag selection\n    e.preventDefault();\n    e.stopPropagation();\n\n    const pos = getMousePosition(e);\n\n    cancelLongMouseDownTimer();\n\n    if (e.button === 0) {\n      leftDown.current = true;\n    } else if (e.button === 2) {\n      rightDown.current = true;\n    }\n\n    if (leftDown.current && rightDown.current) {\n      onDualClick?.(pos);\n      return;\n    }\n\n    if (leftDown.current) {\n      onMouseDown?.(pos);\n    }\n\n    longClickTimer.current = window.setTimeout(() => {\n      longClickTimer.current = 0;\n      leftDown.current = false;\n      rightDown.current = false;\n      onLongMouseDown?.(pos);\n    }, LONG_CLICK_DURATION);\n  }\n\n  function handleMouseUp(e: MouseEvent) {\n    const pos = getMousePosition(e);\n\n    if (!isPanning) {\n      if (!longClickTimer.current) {\n        onLongClick?.(pos);\n      }\n\n      if (leftDown.current) {\n        onClick?.(pos);\n      } else if (rightDown.current) {\n        onRightClick?.(pos);\n      }\n    } else {\n      onPanEnd?.(offset.current);\n    }\n\n    leftDown.current = false;\n    rightDown.current = false;\n\n    onMouseUp?.(pos);\n    cancelLongMouseDownTimer();\n  }\n\n  function handleTouchStart(e: TouchEvent<HTMLDivElement>) {\n    const pos = getTouchPosition(e);\n\n    cancelLongMouseDownTimer();\n    onMouseDown?.(pos);\n\n    longClickTimer.current = window.setTimeout(() => {\n      longClickTimer.current = 0;\n      onLongMouseDown?.(pos);\n    }, LONG_CLICK_DURATION);\n  }\n\n  function handleTouchEnd(e: TouchEvent<HTMLDivElement>) {\n    const pos = getTouchPosition(e);\n\n    if (!isPanning) {\n      if (!longClickTimer.current) {\n        onLongClick?.(pos);\n      } else {\n        onClick?.(pos);\n      }\n    } else {\n      onPanEnd?.(offset.current);\n    }\n\n    onMouseUp?.(pos);\n    cancelLongMouseDownTimer();\n  }\n\n  function handleContextMenu(e: MouseEvent) {\n    e.preventDefault();\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      role=\"button\"\n      tabIndex={-1}\n      className={cn(\n        'mouse-control',\n        isPanning && 'mouse-control--panning',\n      )}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onTouchStart={handleTouchStart}\n      onTouchEnd={handleTouchEnd}\n      onContextMenu={handleContextMenu}\n    >\n      {children}\n    </div>\n  );\n}\n","import { RefObject, useEffect, useState } from 'react';\n\nexport type PanCallback = (dx: number, dy: number) => void;\n\nexport function usePan(containerRef: RefObject<HTMLElement>, callback: PanCallback) {\n  const [isPanning, setIsPanning] = useState(false);\n\n  useEffect(() => {\n    if (!containerRef.current) {\n      return () => {};\n    }\n\n    const containerElement = containerRef.current;\n    let panStart = false;\n    let prevX = 0;\n    let prevY = 0;\n\n    function handlePointerMove(x: number, y: number) {\n      const dx = prevX - x;\n      const dy = prevY - y;\n\n      if (!panStart) {\n        if (Math.abs(dx) + Math.abs(dy) > 1) {\n          setIsPanning(true);\n          panStart = true;\n        }\n      }\n\n      if (panStart) {\n        callback(dx, dy);\n      }\n\n      prevX = x;\n      prevY = y;\n    }\n\n    function handlePointerStart(x: number, y: number) {\n      prevX = x;\n      prevY = y;\n    }\n\n    function handlePointerEnd(e: Event) {\n      e.stopPropagation();\n      e.preventDefault();\n      setIsPanning(false);\n      panStart = false;\n    }\n\n    function handleMouseMove(e: MouseEvent) {\n      handlePointerMove(e.clientX, e.clientY);\n    }\n\n    function handleMouseUp(e: MouseEvent) {\n      handlePointerEnd(e);\n      window.removeEventListener('mouseup', handleMouseUp, false);\n      window.removeEventListener('mousemove', handleMouseMove, false);\n    }\n\n    function handleMouseDown(e: MouseEvent) {\n      handlePointerStart(e.clientX, e.clientY);\n      window.addEventListener('mouseup', handleMouseUp, false);\n      window.addEventListener('mousemove', handleMouseMove, false);\n    }\n\n    function handleTouchMove(e: TouchEvent) {\n      handlePointerMove(e.touches[0].clientX || 0, e.touches[0].clientY || 0);\n    }\n\n    function handleTouchEnd(e: TouchEvent) {\n      handlePointerEnd(e);\n      window.removeEventListener('touchmove', handleTouchMove, false);\n      window.removeEventListener('touchend', handleTouchEnd, false);\n    }\n\n    function handleTouchStart(e: TouchEvent) {\n      handlePointerStart(e.touches[0].clientX || 0, e.touches[0].clientY || 0);\n      window.addEventListener('touchmove', handleTouchMove, false);\n      window.addEventListener('touchend', handleTouchEnd, false);\n    }\n\n    containerElement.addEventListener('mousedown', handleMouseDown, false);\n    containerElement.addEventListener('touchstart', handleTouchStart, false);\n\n    return () => {\n      containerElement.removeEventListener('mousedown', handleMouseDown, false);\n      window.removeEventListener('mousemove', handleMouseMove, false);\n      window.removeEventListener('mouseup', handleMouseUp, false);\n\n      containerElement.removeEventListener('touchstart', handleTouchStart, false);\n      window.removeEventListener('touchmove', handleTouchMove, false);\n      window.removeEventListener('touchend', handleTouchEnd, false);\n    };\n  }, [containerRef, callback]);\n\n  return isPanning;\n}\n","import { RefObject, useEffect, useState } from 'react';\n\nexport function useCanvasContext(\n  canvasRef: RefObject<HTMLCanvasElement>,\n  width: number,\n  height: number,\n) {\n  const [context, setContext] = useState<CanvasRenderingContext2D | undefined>(undefined);\n\n  useEffect(() => {\n    if (!canvasRef.current || !width || !height) {\n      return;\n    }\n\n    const canvasElement = canvasRef.current;\n    const ctx = canvasElement.getContext('2d', { alpha: false });\n\n    if (!ctx) {\n      return;\n    }\n\n    const ratio = window.devicePixelRatio;\n\n    canvasElement.width = width * ratio;\n    canvasElement.height = height * ratio;\n    canvasElement.style.width = `${width}px`;\n    canvasElement.style.height = `${height}px`;\n\n    ctx.scale(ratio, ratio);\n\n    setContext(ctx);\n  }, [canvasRef, width, height]);\n\n  return context;\n}\n","import { useEffect, useRef } from 'react';\nimport { SQUARE_SIZE } from '../constants';\nimport { Range, useRange } from '../utils/Range';\nimport { useCanvasContext } from '../utils/useCanvasContext';\nimport { FieldProps } from './Field';\nimport './CanvasField.css';\n\nexport interface CanvasFieldProps extends Omit<FieldProps, 'children'> {\n  children: (range: Range) => HTMLCanvasElement[];\n}\n\nexport function CanvasField({ offset, children }: CanvasFieldProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const ctx = useCanvasContext(\n    canvasRef,\n    containerRef.current?.clientWidth || 0,\n    containerRef.current?.clientHeight || 0,\n  );\n  const range = useRange(containerRef, offset);\n\n  useEffect(() => {\n    if (!ctx) {\n      return () => {};\n    }\n\n    const requestId = window.requestAnimationFrame(() => {\n      const squares = children?.(range) || [];\n\n      range.forEach((p, i) => {\n        const square = squares[i];\n\n        if (square) {\n          ctx.drawImage(\n            square,\n            p.x * SQUARE_SIZE - offset.x,\n            p.y * SQUARE_SIZE - offset.y,\n            SQUARE_SIZE,\n            SQUARE_SIZE,\n          );\n        }\n      });\n    });\n\n    return () => {\n      window.cancelAnimationFrame(requestId);\n    };\n  }, [offset, range, children, ctx]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"canvas-field\"\n    >\n      <canvas ref={canvasRef} />\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bomb.a3efd994.svg\";","export default __webpack_public_path__ + \"static/media/flag.a9212e68.svg\";","export default __webpack_public_path__ + \"static/media/clock.8231cb11.svg\";","import { useEffect, useRef } from 'react';\nimport { useCanvasContext } from '../utils/useCanvasContext';\nimport { SquareProps } from './Square';\nimport { SQUARE_SIZE } from '../constants';\nimport Mine from '../assets/bomb.svg';\nimport Flag from '../assets/flag.svg';\nimport Clock from '../assets/clock.svg';\n\nconst ICON_SIZE = 16;\nconst BORDER_SIZE = 3;\nconst TEXT_COLORS = [\n  'white',\n  '#0000ff',\n  '#008000',\n  '#ff0000',\n  '#800080',\n  '#800000',\n  '#40e0d0',\n  '#000000',\n  '#808080',\n];\n\nfunction toImage(src: string) {\n  const img = new Image();\n  img.src = src;\n  return img;\n}\n\nconst mineImage = toImage(Mine);\nconst flagImage = toImage(Flag);\nconst clockImage = toImage(Clock);\n\nconst cachedSquares = new Map<string, HTMLCanvasElement>();\n\nfunction drawSquare(ctx: CanvasRenderingContext2D, {\n  checked,\n  flag,\n  itemBox,\n  count = 0,\n  mine,\n  pushed,\n  text,\n}: SquareProps) {\n  ctx.font = '16px monospace';\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n\n  if (checked) {\n    ctx.fillStyle = '#d3d3d3';\n    ctx.fillRect(0, 0, SQUARE_SIZE, SQUARE_SIZE);\n\n    ctx.fillStyle = checked ? '#eee' : '#aaa';\n    ctx.fillRect(\n      BORDER_SIZE / 2,\n      BORDER_SIZE / 2,\n      SQUARE_SIZE - BORDER_SIZE,\n      SQUARE_SIZE - BORDER_SIZE,\n    );\n\n    if (mine) {\n      ctx.drawImage(\n        mineImage,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        ICON_SIZE, ICON_SIZE,\n      );\n    } else if (count > 0) {\n      ctx.fillStyle = TEXT_COLORS[count] || 'white';\n      ctx.fillText(String(count), SQUARE_SIZE / 2, SQUARE_SIZE / 2);\n    }\n  } else {\n    ctx.beginPath();\n    ctx.lineWidth = BORDER_SIZE;\n    ctx.fillStyle = pushed ? '#808080' : '#d3d3d3';\n    ctx.moveTo(0, SQUARE_SIZE);\n    ctx.lineTo(0, 0);\n    ctx.lineTo(SQUARE_SIZE, 0);\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.fillStyle = pushed ? '#d3d3d3' : '#808080';\n    ctx.moveTo(SQUARE_SIZE, 0);\n    ctx.lineTo(SQUARE_SIZE, SQUARE_SIZE);\n    ctx.lineTo(0, SQUARE_SIZE);\n    ctx.fill();\n\n    ctx.fillStyle = checked ? '#eee' : '#aaa';\n    ctx.fillRect(\n      BORDER_SIZE,\n      BORDER_SIZE,\n      SQUARE_SIZE - BORDER_SIZE * 2,\n      SQUARE_SIZE - BORDER_SIZE * 2,\n    );\n\n    if (flag) {\n      ctx.drawImage(\n        flagImage,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        ICON_SIZE, ICON_SIZE,\n      );\n    } else if (itemBox) {\n      ctx.drawImage(\n        clockImage,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        SQUARE_SIZE / 2 - ICON_SIZE / 2,\n        ICON_SIZE, ICON_SIZE,\n      );\n    } else if (text) {\n      ctx.fillStyle = '#2f4f4f';\n      ctx.fillText(text, SQUARE_SIZE / 2, SQUARE_SIZE / 2);\n    }\n  }\n}\n\nexport function getCanvasSquare(props: SquareProps) {\n  const cachedKey = JSON.stringify(props);\n  const cachedSquare = cachedSquares.get(cachedKey);\n\n  if (cachedSquare) {\n    return cachedSquare;\n  }\n\n  const ratio = window.devicePixelRatio;\n  const canvasElement = document.createElement('canvas');\n  const ctx = canvasElement.getContext('2d', { alpha: false });\n\n  canvasElement.width = SQUARE_SIZE * ratio;\n  canvasElement.height = SQUARE_SIZE * ratio;\n\n  if (ctx) {\n    ctx.scale(ratio, ratio);\n    drawSquare(ctx, props);\n  }\n\n  cachedSquares.set(cachedKey, canvasElement);\n\n  return canvasElement;\n}\n\nexport function CanvasSquare(props: SquareProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const ctx = useCanvasContext(canvasRef, SQUARE_SIZE, SQUARE_SIZE);\n\n  useEffect(() => {\n    if (ctx) {\n      const square = getCanvasSquare(props);\n\n      ctx.drawImage(square, 0, 0, SQUARE_SIZE, SQUARE_SIZE);\n    }\n  }, [props, ctx]);\n\n  return <canvas ref={canvasRef} />;\n}\n","import { useCallback, useState } from 'react';\nimport { Position } from '../game/Position';\nimport { FieldState } from '../game/FieldState';\nimport { Field } from '../components/Field';\nimport { Square, toSquarePosition } from '../components/Square';\nimport { MouseControl } from '../components/MouseControl';\nimport { CanvasField } from '../components/CanvasField';\nimport { getCanvasSquare } from '../components/CanvasSquare';\nimport { useSquareText } from '../utils/useSquareText';\n\nexport interface GameFieldProps {\n  fieldState: FieldState;\n  useCanvas?: boolean;\n  squareText: string;\n  onCheck: (p: Position) => void;\n  onChord: (p: Position) => void;\n  onFlag: (p: Position) => void;\n}\n\nexport default function GameField({\n  fieldState,\n  useCanvas = true,\n  squareText,\n  onCheck,\n  onChord,\n  onFlag,\n}: GameFieldProps) {\n  const textTable = useSquareText(squareText);\n  const [offset, setOffset] = useState(Position.Zero);\n  const [pushedSquares, setPushedSquares] = useState<string[]>([]);\n  const handlePan = useCallback((p: Position) => {\n    setOffset(p);\n  }, []);\n\n  function handleDualClick(mousePosition: Position) {\n    const p = toSquarePosition(mousePosition);\n    onChord(p);\n  }\n\n  function handleClick(mousePosition: Position) {\n    const p = toSquarePosition(mousePosition);\n    const block = fieldState.getBlock(p);\n\n    if (block?.checked) {\n      onChord(p);\n    } else {\n      onCheck(p);\n    }\n  }\n\n  function handleLongClick(mousePosition: Position) {\n    const p = toSquarePosition(mousePosition);\n    const block = fieldState.getBlock(p);\n\n    if (block?.checked) {\n      onChord(p);\n    }\n  }\n\n  function handleRightClick(mousePosition: Position) {\n    const p = toSquarePosition(mousePosition);\n    onFlag(p);\n  }\n\n  function handleMouseDown(mousePosition: Position) {\n    const p = toSquarePosition(mousePosition);\n\n    if (fieldState.canChord(p)) {\n      setPushedSquares(\n        FieldState.getAdjacentPositions(p)\n          .filter((q) => !fieldState.getBlock(q)?.flag)\n          .map((q) => q.key),\n      );\n    } else {\n      setPushedSquares([p.key]);\n    }\n  }\n\n  function handleMouseUp() {\n    setPushedSquares([]);\n  }\n\n  return (\n    <MouseControl\n      onPan={handlePan}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n      onLongMouseDown={handleRightClick}\n      onClick={handleClick}\n      onRightClick={handleRightClick}\n      onLongClick={handleLongClick}\n      onDualClick={handleDualClick}\n    >\n      {!useCanvas && (\n        <Field offset={offset}>\n          {(range) => range.map((p) => (\n            <Square\n              key={p.key}\n              pushed={pushedSquares.includes(p.key)}\n              text={textTable[p.key]}\n              {...fieldState.getBlock(p)}\n            />\n          ))}\n        </Field>\n      )}\n      {useCanvas && (\n        <CanvasField offset={offset}>\n          {(range) => range.map((p) => (\n            getCanvasSquare({\n              pushed: pushedSquares.includes(p.key),\n              text: textTable[p.key],\n              ...fieldState.getBlock(p),\n            })\n          ))}\n        </CanvasField>\n      )}\n    </MouseControl>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport { Position } from '../game/Position';\nimport { FieldState, FieldStateSetResult } from '../game/FieldState';\nimport { GameResult } from '../components/GameResult';\nimport { GameContainer } from '../components/GameContainer';\nimport GamePlay from './GamePlay';\nimport GameField from './GameField';\nimport { BRAND } from '../constants';\n\nconst MAX_GAME_SECONDS = 60;\nconst TIME_CHANGE_AMOUNT = 5;\nconst USE_CANVAS = new URL(window.location.href).searchParams.get('canvas') !== 'false';\n\ntype GameStatus = 'ready' | 'playing' | 'gameover';\n\nfunction Game() {\n  const [fieldState, setFieldState] = useState(() => new FieldState());\n  const [status, setStatus] = useState<GameStatus>('ready');\n  const [timeChanges, setTimeChanges] = useState<number[]>([]);\n  const handleTimeOver = useCallback(() => {\n    setStatus('gameover');\n  }, []);\n\n  function checkGameStatus() {\n    switch (status) {\n      case 'ready':\n        setStatus('playing');\n        return true;\n      case 'playing':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function applyStateResult([newState, ...checkedBlocks]: FieldStateSetResult) {\n    if (checkGameStatus()) {\n      setTimeChanges(checkedBlocks.map(({ mine, position }) => {\n        if (mine) {\n          return -TIME_CHANGE_AMOUNT;\n        }\n\n        if (fieldState.getBlock(position)?.itemBox) {\n          return TIME_CHANGE_AMOUNT;\n        }\n\n        return 0;\n      }));\n      setFieldState(newState);\n    }\n  }\n\n  function handleCheck(p: Position) {\n    applyStateResult(fieldState.checkBlock(p));\n  }\n\n  function handleChord(p: Position) {\n    applyStateResult(fieldState.chordBlock(p));\n  }\n\n  function handleFlag(p: Position) {\n    const block = fieldState.getBlock(p);\n\n    checkGameStatus();\n\n    if (!block?.checked) {\n      setFieldState(fieldState.toggleFlag(p)[0]);\n    }\n  }\n\n  function handleRetry() {\n    setStatus('ready');\n    setFieldState(new FieldState());\n  }\n\n  return (\n    <GameContainer\n      isPaused={status === 'gameover'}\n      panel={(\n        <>\n          {status === 'playing' && (\n            <GamePlay\n              maxSeconds={MAX_GAME_SECONDS}\n              fieldState={fieldState}\n              timeChanges={timeChanges}\n              onTimeOver={handleTimeOver}\n            />\n          )}\n\n          {status === 'gameover' && (\n            <GameResult\n              stats={fieldState.stats}\n              onRetry={handleRetry}\n            />\n          )}\n        </>\n      )}\n    >\n      <GameField\n        fieldState={fieldState}\n        squareText={BRAND}\n        useCanvas={USE_CANVAS}\n        onCheck={handleCheck}\n        onChord={handleChord}\n        onFlag={handleFlag}\n      />\n    </GameContainer>\n  );\n}\n\nexport default Game;\n","import { Opening } from './components/Opening';\nimport { BRAND } from './constants';\nimport Game from './scenes/Game';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Game />\n      <Opening brand={BRAND} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}